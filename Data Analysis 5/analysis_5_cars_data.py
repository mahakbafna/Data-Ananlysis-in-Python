# -*- coding: utf-8 -*-
"""ANALYSIS_5_CARS data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zZgNE3lKjp91ValYu8XWVNtdmeezMxQ2

ANALYSIS 5
"""

# Commented out IPython magic to ensure Python compatibility.
# imports
import numpy as np
import pandas as pd
pd.set_option('display.max_columns', 40)
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
import seaborn as sns
# %matplotlib inline
sns.set_style('darkgrid')
import plotly.express as px
from sklearn.cluster import KMeans
import warnings
warnings.filterwarnings('ignore');

df = pd.read_csv("CARS.csv")
# To display the top 5 rows 
df.head(5)

df.tail(5)

"""Checking the types of data"""

df.dtypes

""" Dropping the duplicate rows"""

df.shape

duplicate_rows_df = df[df.duplicated()]
print("number of duplicate rows: ", duplicate_rows_df.shape)

"""Now let us remove the duplicate data because it's ok to remove them."""

df.count()      # Used to count the number of rows

df = df.drop_duplicates()
df.head(5)

df.count()

"""Dropping the missing or null values."""

print(df.isnull().sum())

df = df.dropna()    # Dropping the missing values.
df.count()

print(df.isnull().sum())   # After dropping the values

"""Converting the object values to integer type.

While having a look at the data, the MSRP was stored as an object type. This is a serious problem because it is impossible to plot those values on a graph because it is a primary requirement that during plotting a graph all the values must be of type integer data. The author has stored, the MSRP in a different format ($36, 000) so I had to remove the formatting and then convert them to an integer.
"""

# Removing the formatting
df['MSRP'] = [x.replace('$', '') for x in df['MSRP']] 
df['MSRP'] = [x.replace(',', '') for x in df['MSRP']]

df['MSRP']=pd.to_numeric(df['MSRP'],errors='coerce')

"""Univariate Analysis"""

df[['EngineSize','Wheelbase','Weight','Horsepower','MSRP']].hist(figsize=(10,8),bins=6,color='Y')
# 2 plt.figure(figsize=(10,8))
plt.tight_layout()
plt.show()

"""
Most of the cars have the Engine size from 2 to 3

Most of the cars have wheelbase from 100 to 110

Most of the cars have the Weight from 3000 to 4000

Most of the cars have the Horsepower from 150 to 200

Most of the cars have the MSRP from 25000 to 50000."""

import seaborn as sns
corr = df.corr()
plt.figure(figsize=(20,9))
a = sns.heatmap(corr, annot=True, fmt='.2f')

"""Bivariate Analysis

Price Analysis
"""

plt.rcParams['figure.figsize']=(35,20)
ax = sns.boxplot(x="Make", y="MSRP", data=df)

plt.rcParams['figure.figsize']=(19,7)
ax = sns.boxplot(x="Type", y="MSRP", data=df)

sns.catplot(data=df, x="Type", y="MSRP", hue="Origin" ,kind="point")

plt.rcParams['figure.figsize']=(10,5)
ax = sns.boxplot(x="MPG_City", y="MSRP", data=df)

sns.catplot(data=df, x="Cylinders", y="Horsepower",kind="violin")

g = sns.pairplot(df[["MPG_City", "Horsepower", "EngineSize", "MSRP", "Type"]], hue="Type", diag_kind="hist")